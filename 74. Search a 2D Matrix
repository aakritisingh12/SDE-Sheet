class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();
        int l=0, r=m-1, mid=0; 
        while(l<=r) {
            mid = (l+r)/2;
            if(target <= matrix[mid][n-1] && target >= matrix[mid][0]) {
                break;
            }
            else if(target < matrix[mid][0]) {
                r = mid-1;
            }
            else {
                l = mid+1;
            }
        }
        int low = 0, high = n-1;
        int md=0;
        while(low <= high) {
            md = (low+high)/2;
            if(target == matrix[mid][md]) {
                break;
                }
            else if(target < matrix[mid][md]) {
                high = md-1;
            }
            else {
                low = md+1;
            }
        }
        cout<<matrix[mid][md];
        if(matrix[mid][md] == target) {
            return true;
        }
        else {
            return false;
        }
    }
};
